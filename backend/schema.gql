# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Author {
  id: ID!

  """Author first name"""
  firstName: String

  """Author last name"""
  lastName: String!

  """Author year of death"""
  dateOfBirth: DateTime

  """Author year of death"""
  dateOfDeath: DateTime

  """Author hometown"""
  hometown: String

  """Bio of author"""
  bio: String
  books: [Book!]!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Book {
  id: ID!

  """ISBN 13"""
  isbn: String

  """Title of the book"""
  title: String!

  """Date as ISO string"""
  publicationDate: String

  """Synopsis of the book"""
  synopsis: String

  """URL to the book cover"""
  coverImage: String!

  """URL to a free download of the book"""
  downloadUrl: String

  """URL to a page where the book can be purchased"""
  purchaseUrl: String
  authors: [Author!]!
  bookReviews: [BookReview!]!
}

type BookReview {
  id: ID!

  """Date as ISO string"""
  creationDate: String!

  """Date as ISO string"""
  lastUpdated: String!

  """review body text"""
  body: String!

  """Book Rating"""
  rating: Float!
  user: User!
  book: Book!
}

type User {
  id: ID!
  firstName: String!
  lastName: String!
  bio: String

  """Author year of death"""
  dateOfBirth: DateTime!
  userAuth: UserAuth!
  bookReviews: [BookReview!]
  friends: [User!]
}

type UserAuth {
  id: ID!
  email: String!
  user: User!
}

type UserSession {
  id: ID!
  firstName: String
  lastName: String
  token: String
}

type PageInfo {
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
  endCursor: String
  totalEdges: Int
}

type BookEdge {
  """The node object (belonging to type Book) attached to the edge."""
  node: Book!

  """
  An opaque cursor that can be used to retrieve further pages of edges before or after this one.
  """
  cursor: String!
}

type BookConnection {
  pageInfo: PageInfo!
  edges: [BookEdge!]!
}

type AuthorEdge {
  """The node object (belonging to type Author) attached to the edge."""
  node: Author!

  """
  An opaque cursor that can be used to retrieve further pages of edges before or after this one.
  """
  cursor: String!
}

type AuthorConnection {
  pageInfo: PageInfo!
  edges: [AuthorEdge!]!
}

type Query {
  getUserSession: UserSession!
  listUsers: [User!]!
  getUser(id: String!): User!
  listBooks(
    """Retrieve page of edges by fixed offset page number."""
    page: Int

    """Retrieve page of edges before opaque cursor."""
    before: String

    """Retrieve page of edges after opaque cursor."""
    after: String

    """Retrieve first `n` edges."""
    first: Int

    """Retrieve last `n` edges."""
    last: Int
    filter: ListBooksFilter
  ): BookConnection!
  getBook(id: String!): Book!
  listAuthors(
    """Retrieve page of edges by fixed offset page number."""
    page: Int

    """Retrieve page of edges before opaque cursor."""
    before: String

    """Retrieve page of edges after opaque cursor."""
    after: String

    """Retrieve first `n` edges."""
    first: Int

    """Retrieve last `n` edges."""
    last: Int
  ): AuthorConnection!
  getAuthor(id: String!): Author!
  listReviewsByUser(userId: String!): [BookReview!]!
  listReviewsByBook(id: String!): [BookReview!]!
  getReviewByUser(userId: String!, bookId: String!): BookReview!
  listAllReviews: [BookReview!]!
  generateReview(reviewer: Int!, bookId: String!): String!
}

input ListBooksFilter {
  """substring against which to match titles"""
  title: String
}

type Mutation {
  registerUser(input: CreateUserAuthInput!): UserSession!
  signInUser(email: String!, password: String!): UserSession!
  signOutUser: UserSession!
  updateUser(input: UpdateUserInput!): User!
  removeUser(id: Int!): User!
  addFriend(friendId: String!): User!
  createBook(input: CreateBookInput!): Book!
  updateBook(input: UpdateBookInput!): Book!
  removeBook(id: Int!): Book!
  createAuthor(input: CreateAuthorInput!): Author!
  updateAuthor(input: UpdateAuthorInput!): Author!
  removeAuthor(id: String!): Author!
  createBookReview(input: CreateBookReviewInput!): BookReview!
  removeBookReview(id: String!): Book!
}

input CreateUserAuthInput {
  firstName: String!
  lastName: String!
  bio: String
  dateOfBirth: String!
  email: String!
  password: String!
}

input UpdateUserInput {
  firstName: String
  lastName: String
  bio: String
  dateOfBirth: String
  id: ID!
}

input CreateBookInput {
  """ISBN 13"""
  isbn: String

  """Title of the book"""
  title: String!

  """Date as ISO string"""
  publicationDate: String

  """Synopsis of the book"""
  synopsis: String

  """URL to the book cover"""
  coverImage: String!

  """URL to a free download of the book"""
  downloadUrl: String

  """URL to a page where the book can be purchased"""
  purchaseUrl: String
  authorIds: [ID!]
}

input UpdateBookInput {
  """ISBN 13"""
  isbn: String

  """Title of the book"""
  title: String

  """Date as ISO string"""
  publicationDate: String

  """Synopsis of the book"""
  synopsis: String

  """URL to the book cover"""
  coverImage: String

  """URL to a free download of the book"""
  downloadUrl: String

  """URL to a page where the book can be purchased"""
  purchaseUrl: String
  authorIds: [ID!]
  id: Int!
}

input CreateAuthorInput {
  """Author first name"""
  firstName: String!

  """Author last name"""
  lastName: String!

  """Author year of death"""
  dateOfBirth: DateTime!

  """Author year of death"""
  dateOfDeath: DateTime

  """Author hometown"""
  hometown: String

  """Biography of author"""
  bio: String
  bookIds: [ID!]
}

input UpdateAuthorInput {
  """Author first name"""
  firstName: String

  """Author last name"""
  lastName: String

  """Author year of death"""
  dateOfBirth: DateTime

  """Author year of death"""
  dateOfDeath: DateTime

  """Author hometown"""
  hometown: String

  """Biography of author"""
  bio: String
  bookIds: [ID!]
  id: String!
}

input CreateBookReviewInput {
  """Id of the reviewer"""
  userId: String!

  """Id of the book being reviewed"""
  bookId: String!

  """Body of the review"""
  body: String!

  """Rating tied to review"""
  rating: Float!
}